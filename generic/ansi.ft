DECIMAL

: ANSI-ESC-START   27 EMIT 91 EMIT ;
: AT-XY   ANSI-ESC-START 1+ .D 59 EMIT 1+ .D 72 EMIT ;
: !CURSOR   27 EMIT 55 EMIT ;
: @CURSOR   27 EMIT 56 EMIT ;
: CLS   ANSI-ESC-START 50 EMIT 74 EMIT 0 0 AT-XY ;
: CURSOR-UP   ANSI-ESC-START 65 EMIT ;
: CURSOR-DOWN   ANSI-ESC-START 66 EMIT ;
: CURSOR-RIGHT   ANSI-ESC-START 67 EMIT ;
: CURSOR-LEFT   ANSI-ESC-START 68 EMIT ;
: CLR-EOL   ANSI-ESC-START 48 EMIT 75 EMIT ;
: CLR-SOL   ANSI-ESC-START 49 EMIT 75 EMIT ;
: CLR-LINE   ANSI-ESC-START 50 EMIT 75 EMIT ;

$5B410000 CONSTANT KEY-UP
$5B420000 CONSTANT KEY-DOWN
$5B440000 CONSTANT KEY-LEFT
$5B430000 CONSTANT KEY-RIGHT
$5B317E00 CONSTANT KEY-HOME
$5B347E00 CONSTANT KEY-END
$5B327E00 CONSTANT KEY-INSERT
$5B337E00 CONSTANT KEY-DELETE
$5B357E00 CONSTANT KEY-PGUP
$5B367E00 CONSTANT KEY-PGDOWN
127 CONSTANT KEY-BACKSPACE

: ROTKEY   ( current rot-count key -- current' rot-count' )
    OVER ROTATE ROT OR SWAP 8 -
;

: READWKEY
     WAIT-KEY READ-KEY   DUP #27 = IF
        DROP 0 #24 WAIT-KEY READ-KEY   DUP #91 = IF
            ROTKEY
            BEGIN
                WAIT-KEY READ-KEY DUP >R ROTKEY R>
                DUP #65 #91 WITHIN SWAP #126 = OR
            UNTIL DROP
        ELSE DUP #79 = IF
                ROTKEY WAIT-KEY READ-KEY ROTKEY DROP
            THEN
        THEN
    THEN
;

: TIB-TAIL   >TIB @ TIB# @ OVER - SWAP TIB + SWAP ;
: .TIB-TAIL   CLR-EOL !CURSOR TIB-TAIL TYPE @CURSOR ;
: CURSOR>   1 >TIB +! CURSOR-RIGHT ;
: CURSOR<   1 >TIB -! CURSOR-LEFT ;
: INSERT   TIB-TAIL OVER 1+ SWAP CMOVE>   1 TIB# +!   TIB >TIB @ + C! ;
: DELETE   1 TIB# -! TIB-TAIL OVER 1+ -ROT CMOVE ;
: -START?   >TIB @ 0> ;   : -END?   >TIB @ TIB# @ < ;
: -FULL?   TIB# @ #TIB < ;

: READLINE-CRSR
    0 TIB# !   0 >TIB !
    BEGIN
        KEY
        CASE
            DUP 32 127 WITHIN -FULL? AND IF INSERT .TIB-TAIL CURSOR> ELSE
            DUP 127 = -START? AND IF DROP CURSOR< DELETE .TIB-TAIL ELSE
            DUP 8 = OVER KEY-DELETE = OR -END? AND IF DROP DELETE .TIB-TAIL ELSE
            DUP 13 = OVER 10 = OR IF DROP TIB# @ EXIT ELSE
            DUP KEY-RIGHT = -END? AND IF DROP CURSOR> ELSE
            DUP KEY-LEFT = -START? AND IF DROP CURSOR< ELSE
        ENDCASE
    AGAIN
;

: ANSI-IO
    ['] READWKEY 'KEY !
    ['] READLINE-CRSR  'ACCEPT !
;
