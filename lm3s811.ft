HEX

: REGISTER   CREATE , DOES> @ + ;
: SET-BITS   DUP @ ROT OR SWAP ! ;
: CLEAR-BITS   DUP @ ROT INVERT AND SWAP ! ;

E000E010 CONSTANT STCTRL
E000E014 CONSTANT STRELOAD
E000E018 CONSTANT STCURRENT

400FE000 CONSTANT SYSCTL
400FE000 CONSTANT SYSCTL-DID0
400FE004 CONSTANT SYSCTL-DID1
400FE100 CONSTANT SYSCTL-RCGC0
400FE104 CONSTANT SYSCTL-RCGC1
400FE108 CONSTANT SYSCTL-RCGC2

40020000 CONSTANT I2C
40020000 CONSTANT I2CMSA
40020004 CONSTANT I2CMCS
40020008 CONSTANT I2CMDR
4002000C CONSTANT I2CMTPR
40020010 CONSTANT I2CMIMR
40020014 CONSTANT I2CMRIS
40020018 CONSTANT I2CMMIS
4002001C CONSTANT I2CMICR
40020020 CONSTANT I2CMCR
40020800 CONSTANT I2CSOAR
40020804 CONSTANT I2CSCSR
40020808 CONSTANT I2CSDR
4002080C CONSTANT I2CSIMR
40020810 CONSTANT I2CSRIS
40020814 CONSTANT I2CSMIS
40020818 CONSTANT I2CSICR

40030000 CONSTANT TIMER0
40031000 CONSTANT TIMER1
40032000 CONSTANT TIMER2
000 REGISTER GPTMCFG
004 REGISTER GPTMTAMR
008 REGISTER GPTMTBMR
00C REGISTER GPTMCTL
018 REGISTER GPTMMIR
01C REGISTER GPTMRIS
020 REGISTER GPTMMIS
024 REGISTER GPTMICR
028 REGISTER GPTMTAILR
02C REGISTER GPTMTBILR
030 REGISTER GPTMTAMATCHR
034 REGISTER GPTMTBMATCHR
038 REGISTER GPTMTAPR
03C REGISTER GPTMTBPR
040 REGISTER GPTMTAPMR
044 REGISTER GPTMTBPMR
048 REGISTER GPTMTAR
04C REGISTER GPTMTBR

40038000 CONSTANT ADC
40038000 CONSTANT ADCACTSS
40038004 CONSTANT ADCRIS
40038008 CONSTANT ADCIM
4003800C CONSTANT ADCISC
40038010 CONSTANT ADCOSTAT
40038014 CONSTANT ADCEMUX
40038018 CONSTANT ADCUSTAT
40038020 CONSTANT ADCSSPRI
40038028 CONSTANT ADCPSSI
40038030 CONSTANT ADCSAC
40038040 CONSTANT ADCSSMUX0
40038044 CONSTANT ADCSSCTL0
40038048 CONSTANT ADCSSFIFO0
4003804C CONSTANT ADCSSFSTAT0
40038060 CONSTANT ADCSSMUX1
40038064 CONSTANT ADCSSCTL1
40038068 CONSTANT ADCSSFIFO1
4003806C CONSTANT ADCSSFSTAT1
40038080 CONSTANT ADCSSMUX2
40038084 CONSTANT ADCSSCTL2
40038088 CONSTANT ADCSSFIFO2
4003808C CONSTANT ADCSSFSTAT2
400380A0 CONSTANT ADCSSMUX3
400380A4 CONSTANT ADCSSCTL3
400380A8 CONSTANT ADCSSFIFO3
400380AC CONSTANT ADCSSFSTAT3
40038100 CONSTANT ADCTMLB

: BUTTON0-IRQ   10 GPIOC GPIO-ICR C! FF PAD ! ;I
: BUTTON0-ENABLE
    4 NVIC-SETENA SET-BITS
    ['] BUTTON0-IRQ IVT 11 CELLS + !
    10 GPIOC GPIO-IM SET-BITS ;

: I2CM-ENABLE
    0C GPIOB GPIO-AFSEL SET-BITS
    0C GPIOB GPIO-ODR SET-BITS
    0C GPIOB GPIO-PUR SET-BITS
    0C GPIOB GPIO-PDR CLEAR-BITS
    0C GPIOB GPIO-DEN SET-BITS
    10 I2CMCR SET-BITS
    8 (I2C-DELAY) ! ;
    02 I2CMTPR C! ;

: I2CS-ENABLE
    20 I2CMCR SET-BITS
    1 I2CSCSR SET-BITS
    3C I2CSOAR C! ;

: I2C-LOOPBACK
    I2CM-ENABLE I2CS-ENABLE
    1 I2CMCR SET-BITS
    3C 2* I2CMSA C! ;

: I2CM-SINGLE-SEND
    7 I2CMCS C! ;

: I2CM-SEND-START
    3 I2CMCS C! ;

: I2CM-SEND-RUN
    1 I2CMCS C! ;

: I2CM-SEND-STOP
    5 I2CMCS C! ;

: I2CM!
    I2CMDR C! ;

: I2CS@
    I2CSDR C@ ;

(   Busy delay loop. Some example delay values at 6MHz: )
(   4: 0x0210 ticks = 0.00009s                          )
(  16: 0x06d8 ticks = 0.0003s                           )
( 100: 0x2850 ticks = 0.0017s                           )
: I2C-DELAY
    (I2C-DELAY) @ BEGIN 1- DUP 0= UNTIL DROP ;

: (I2CM-SINGLE-SEQ!)
    DUP C@ 1 DO
        DUP I + C@ I2CM!
        I 1 = 2 AND 1 OR I2CMCS C!
        I2C-DELAY
    LOOP
    DUP C@ + DUP C@ I2CM!
    SWAP I2CMCS C!
    I2C-DELAY
    1+ ;

: I2CM-SINGLE-SEQ-START!
    1 SWAP (I2CM-SINGLE-SEQ!) ;

: I2CM-SINGLE-SEQ!
    5 SWAP (I2CM-SINGLE-SEQ!) ;

: I2CM-SEQ!
    DUP C@ SWAP 1+ SWAP 1+ 1 DO
        I2CM-SINGLE-SEQ!
    LOOP DROP ;

: POT-ENABLE
    8 ADCACTSS C! ;

: POT@
    8 ADCPSSI C!
    ADCSSFIFO3 @ ;

CREATE DISP-INIT-SEQ
    013 C,
    002 C, 080 C, 0AE C,
    002 C, 080 C, 004 C,
    002 C, 080 C, 012 C,
    004 C, 080 C, 081 C, 080 C, 02B C,
    002 C, 080 C, 0A1 C,
    002 C, 080 C, 040 C,
    004 C, 080 C, 0D3 C, 080 C, 000 C,
    004 C, 080 C, 0A8 C, 080 C, 00F C,
    002 C, 080 C, 0A4 C,
    002 C, 080 C, 0A6 C,
    002 C, 080 C, 0B0 C,
    002 C, 080 C, 0C8 C,
    004 C, 080 C, 0D5 C, 080 C, 072 C,
    004 C, 080 C, 0D8 C, 080 C, 000 C,
    004 C, 080 C, 0D9 C, 080 C, 022 C,
    004 C, 080 C, 0DA C, 080 C, 012 C,
    004 C, 080 C, 0DB C, 080 C, 00F C,
    004 C, 080 C, 0AD C, 080 C, 08B C,
    002 C, 080 C, 0AF C,

CREATE DISP-SELECT-ROW0
    007 C, 080 C, 0B0 C, 080 C, 004 C, 080 C, 012 C, 040 C,

CREATE DISP-SELECT-ROW1
    007 C, 080 C, 0B1 C, 080 C, 004 C, 080 C, 012 C, 040 C,

: DISP-ENABLE
    I2CM-ENABLE
    3D 2* I2CMSA C!
    16 (I2C-DELAY) !
    DISP-INIT-SEQ I2CM-SEQ!
    8 (I2C-DELAY) ! ;

: DISP-FILL-ROW
    I2CM-SINGLE-SEQ-START! DROP
    96 0 DO DUP I2CM! I2CM-SEND-RUN I2C-DELAY LOOP
    I2CM! I2CM-SEND-STOP I2C-DELAY ;

: DISP-FILL
    DUP DISP-SELECT-ROW0 DISP-FILL-ROW DISP-SELECT-ROW1 DISP-FILL-ROW ;

: DISP-SET   0FF DISP-FILL ;
: DISP-CLEAR   000 DISP-FILL ;

: DISP-MOVE
    080 I2CM! I2CM-SEND-START I2C-DELAY
    0B0 + I2CM! I2CM-SEND-RUN I2C-DELAY
    080 I2CM! I2CM-SEND-RUN I2C-DELAY 4 + DUP 00F AND I2CM! I2CM-SEND-RUN I2C-DELAY
    080 I2CM! I2CM-SEND-RUN I2C-DELAY 2/ 2/ 2/ 2/ 00F AND 10 OR I2CM! I2CM-SEND-STOP I2C-DELAY ;

: DISP-EMIT
    40 I2CM! I2CM-SEND-START I2C-DELAY
    20 - 5 * DISP-FONT + 5 0 DO
        DUP I + C@ I2CM! I2CM-SEND-RUN I2C-DELAY
    LOOP DROP 0 I2CM! I2CM-SEND-STOP I2C-DELAY ;

: DISP-TYPE
   0 DO DUP I + C@ DISP-EMIT LOOP DROP ; 

QUIT
